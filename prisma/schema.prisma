// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator dbml {
  provider            = "prisma-dbml-generator"
  output              = "./dbml"
  outputName          = "seed-model.dbml"
  projectName         = "SEED 2.0"
  projectDatabaseType = "PostgreSQL"
  projectNote         = "SEED 2.0"
}

generator docs {
  provider = "node node_modules/prisma-docs-generator"
  output   = "./docs"
}

model user {
  id            String @id @default(uuid())
  name          String?
  email         String?
  offerType     String?
  amount        Int?
  isPaid        Boolean? @default(false)
  address       String?
  height        String?
  weight        String?
  contactNumber String?
  transactionCode String?
  isValid      Boolean?   @default(true)
  @@map("users")
}

model newUser {
id            String       @id @default(uuid())
name          String
email         String       @unique
phone         String       
address       String
createdAt     DateTime     @default(now())
updatedAt     DateTime     @updatedAt

@@map("new_users")
}

model Product {
id            String       @id @default(uuid())
productName   String
stock         Stock[]
createdAt     DateTime     @default(now())
updatedAt     DateTime     @updatedAt

@@map("products")
}

model Stock {
id            String       @id @default(uuid())
productId     String
product       Product   @relation(fields: [productId], references: [id])
quantity      Int
colorId       Int
sizeId        Int
color         Color     @relation(fields: [colorId], references: [id])
size          Size      @relation(fields: [sizeId], references: [id])
createdAt     DateTime     @default(now())
updatedAt     DateTime     @updatedAt

@@map("stocks")
}

model Color {
  id              Int       @id @default(autoincrement())
  color            String    @unique
  stock           Stock[]

  @@map("colors")
}

model Size {
  id              Int       @id @default(autoincrement())
  size            String    @unique
  stock           Stock[]

  @@map("sizes")
}


model Order {
id            String       @id @default(uuid())
productName   String
productId     String
quantity      Int
price         Float
total         Float
color         String
size          String
isPaid        Boolean      @default(false)
isDelivered   Boolean      @default(false)
deliveryType  String
discount      Float
discountCupon String
createdAt     DateTime     @default(now())
updatedAt     DateTime     @updatedAt
} 

